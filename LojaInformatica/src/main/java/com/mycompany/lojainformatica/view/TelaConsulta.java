/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.lojainformatica.view;

import com.mycompany.lojainformatica.dao.ComputadoresDAO;
import com.mycompany.lojainformatica.model.Computador;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexs Crie uma outra interface (JFrame) para consultar os
 * computadores do banco de dados e exibir em uma tabela da sua aplicação. 5.1)
 * A tela deverá permitir filtrar por processador 5.2) A tela deverá permitir
 * alterar os dados do computador e excluir um computador da tabela
 */
public class TelaConsulta extends javax.swing.JFrame {

    /**
     * Creates new form Consulta
     */
    public TelaConsulta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsulta = new javax.swing.JTable();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnFiltar = new javax.swing.JButton();
        cboProcessadorConsulta = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblConsultaProcessador = new javax.swing.JTable();
        btnCadastrarNovo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consultar");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Consultar por Processador");

        btnConsultar.setText("Ver todos");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        tblConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Numero do computador", "Marca", "Processador", "HD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblConsulta);

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnFiltar.setText("Filtar");
        btnFiltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltarActionPerformed(evt);
            }
        });

        cboProcessadorConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um tipo de Processador...", "i5 10400F", "Ryzen 5 3600", "Ryzen 3 3200G", "Ryzen 3 3200X", "Ryzen 3 3200A", " ", " " }));
        cboProcessadorConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProcessadorConsultaActionPerformed(evt);
            }
        });

        tblConsultaProcessador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Numero do computador", "Marca", "Processador", "HD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblConsultaProcessador);

        btnCadastrarNovo.setText("Cadastrar Novo");
        btnCadastrarNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAlterar)
                        .addGap(375, 375, 375)
                        .addComponent(btnConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboProcessadorConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFiltar))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 45, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadastrarNovo))
                .addGap(160, 160, 160))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboProcessadorConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCadastrarNovo)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // impotando a class mode e a DAO, junto com o metodo de listar
        ArrayList<Computador> lista = ComputadoresDAO.listar();
        /*convertendo o modelo de tabela da tabela "tblConsulta" em um objeto "DefaultTableModel".*/
        DefaultTableModel modelo = (DefaultTableModel) tblConsulta.getModel();
        /*atualiza a tabela "tblConsulta" com os dados da lista de objetos, obtida do banco de dados.*/

        modelo.setRowCount(0);
        for (Computador item : lista) {
            modelo.addRow(new String[]{String.valueOf(item.getNumeroDoComputador()), (item.getMarca()), String.valueOf(item.getPrecessador()), String.valueOf(item.getHD())});
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblConsultaProcessador.getSelectedRow() != -1) {
            int linhaSelecionadaExcluir = tblConsultaProcessador.getSelectedRow();

            DefaultTableModel modelo = (DefaultTableModel) tblConsultaProcessador.getModel();
            // excluir do banco 
            int id = Integer.parseInt(tblConsultaProcessador.getValueAt(linhaSelecionadaExcluir, 0).toString());
            boolean retorno = ComputadoresDAO.excluir(id);
            if (retorno) {
                modelo.removeRow(linhaSelecionadaExcluir);
                JOptionPane.showMessageDialog(rootPane, "Excluido!!");

            } else {
                JOptionPane.showMessageDialog(rootPane, "falha!");
            }

            // remove da tabela de processador 
        } else if (tblConsulta.getSelectedRow() == -1 && tblConsultaProcessador.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "selecione uma linha para excluir");
        }

        if (tblConsulta.getSelectedRow() != -1) {

            int linhaSelecionada = tblConsulta.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) tblConsulta.getModel();
            // excluir do banco 
            int id = Integer.parseInt(tblConsulta.getValueAt(linhaSelecionada, 0).toString());
            boolean retorno = ComputadoresDAO.excluir(id);
            if (retorno) {
                modelo.removeRow(linhaSelecionada);
                JOptionPane.showMessageDialog(rootPane, "Excluido");

            } else {
                JOptionPane.showMessageDialog(rootPane, "falha!");
            }

            // remove da tabela geral
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        if (tblConsulta.getSelectedRow() == -1 && tblConsultaProcessador.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "selecione uma linha para alterar");
        }

        if (tblConsultaProcessador.getSelectedRow() >= 0) {

            Computador objComputadorFiltro = new Computador();

            int linhaSelecionadafilto = tblConsultaProcessador.getSelectedRow();
            DefaultTableModel modeloConsulta = (DefaultTableModel) tblConsultaProcessador.getModel();

            int numeroPCFiltro = Integer.parseInt(modeloConsulta.getValueAt(linhaSelecionadafilto, 0).toString());
            String processadorFiltro = (modeloConsulta.getValueAt(linhaSelecionadafilto, 2).toString());
            String HDFiltro = (modeloConsulta.getValueAt(linhaSelecionadafilto, 3).toString());

            objComputadorFiltro.setNumeroDoComputador(numeroPCFiltro);
            objComputadorFiltro.setPrecessador(processadorFiltro);
            objComputadorFiltro.setHD(HDFiltro);

            TelaComputadores telaComputadores = new TelaComputadores(objComputadorFiltro);

            telaComputadores.setVisible(true);
        } else if (tblConsulta.getSelectedRow() >= 0) {

            Computador objComputador = new Computador();

            int linhaSelecionada = tblConsulta.getSelectedRow();

            DefaultTableModel modelo = (DefaultTableModel) tblConsulta.getModel();/*<-- (conversão) do modelo de dados da  tabela tbl consulta */
            // pegando a linha  selecionada e convetendo o obj  para String e em seguinda convetendo para int e amazenando na variavel id  
            int numeroPC = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            /*String marca = (modelo.getValueAt(linhaSelecionada, 1).toString());//se for possivel alterar a marca */
            String marca = (modelo.getValueAt(linhaSelecionada, 1).toString());
            String processador = (modelo.getValueAt(linhaSelecionada, 2).toString());
            String HD = (modelo.getValueAt(linhaSelecionada, 3).toString());
            //Passo os valores das variáveis para um objeto
            //NotaFiscal obj = new NotaFiscal(id, numero, valor);
            objComputador.setMarca(marca);
            objComputador.setNumeroDoComputador(numeroPC);
            objComputador.setPrecessador(processador);
            objComputador.setHD(HD);
            TelaComputadores telaComputadores = new TelaComputadores(objComputador);
            telaComputadores.setVisible(true);
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void cboProcessadorConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProcessadorConsultaActionPerformed
    }//GEN-LAST:event_cboProcessadorConsultaActionPerformed

    private void btnFiltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltarActionPerformed
        if (cboProcessadorConsulta.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, " Selecione um Processador !");

        } else {
            Computador objComputador = new Computador();
            String processadorSelecionado = cboProcessadorConsulta.getSelectedItem().toString();

            objComputador.setPrecessador(processadorSelecionado);

            ArrayList<Computador> lista = ComputadoresDAO.filtro(objComputador);
            if (lista.size() == 0) {
                JOptionPane.showMessageDialog(rootPane, " Não possui esse processador no banco de dados!");
            }
            //convertendo o modelo de tabela da tabela "tblConsulta" em um objeto "DefaultTableModel".
            DefaultTableModel modelo = (DefaultTableModel) tblConsultaProcessador.getModel();
            // atualiza a tabela "tblConsulta" com os dados da lista de objetos "lojainformatica" obtida do banco de dados.

            modelo.setRowCount(0);
            for (Computador item : lista) {
                modelo.addRow(new String[]{String.valueOf(item.getNumeroDoComputador()), (item.getMarca()), String.valueOf(item.getPrecessador()), String.valueOf(item.getHD())});
            }
        }
    }//GEN-LAST:event_btnFiltarActionPerformed

    private void btnCadastrarNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarNovoActionPerformed
        TelaComputadores atalhoConsulta = new TelaComputadores();
        atalhoConsulta.setVisible(true);
    }//GEN-LAST:event_btnCadastrarNovoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrarNovo;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFiltar;
    private javax.swing.JComboBox<String> cboProcessadorConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblConsulta;
    private javax.swing.JTable tblConsultaProcessador;
    // End of variables declaration//GEN-END:variables
}
